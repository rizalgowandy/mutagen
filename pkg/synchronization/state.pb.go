// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: synchronization/state.proto

package synchronization

import (
	core "github.com/mutagen-io/mutagen/pkg/synchronization/core"
	rsync "github.com/mutagen-io/mutagen/pkg/synchronization/rsync"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status encodes the status of a synchronization session.
type Status int32

const (
	// Status_Disconnected indicates that the session is unpaused but not
	// currently connected or connecting to either endpoint.
	Status_Disconnected Status = 0
	// Status_HaltedOnRootEmptied indicates that the session is halted due to
	// the root emptying safety check.
	Status_HaltedOnRootEmptied Status = 1
	// Status_HaltedOnRootDeletion indicates that the session is halted due to
	// the root deletion safety check.
	Status_HaltedOnRootDeletion Status = 2
	// Status_HaltedOnRootTypeChange indicates that the session is halted due to
	// the root type change safety check.
	Status_HaltedOnRootTypeChange Status = 3
	// Status_ConnectingAlpha indicates that the session is attempting to
	// connect to the alpha endpoint.
	Status_ConnectingAlpha Status = 4
	// Status_ConnectingBeta indicates that the session is attempting to connect
	// to the beta endpoint.
	Status_ConnectingBeta Status = 5
	// Status_Watching indicates that the session is watching for filesystem
	// changes.
	Status_Watching Status = 6
	// Status_Scanning indicates that the session is scanning the filesystem on
	// each endpoint.
	Status_Scanning Status = 7
	// Status_WaitingForRescan indicates that the session is waiting to retry
	// scanning after an error during the previous scanning operation.
	Status_WaitingForRescan Status = 8
	// Status_Reconciling indicates that the session is performing
	// reconciliation.
	Status_Reconciling Status = 9
	// Status_StagingAlpha indicates that the session is staging files on alpha.
	Status_StagingAlpha Status = 10
	// Status_StagingBeta indicates that the session is staging files on beta.
	Status_StagingBeta Status = 11
	// Status_Transitioning indicates that the session is performing transition
	// operations on each endpoint.
	Status_Transitioning Status = 12
	// Status_Saving indicates that the session is recording synchronization
	// history to disk.
	Status_Saving Status = 13
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0:  "Disconnected",
		1:  "HaltedOnRootEmptied",
		2:  "HaltedOnRootDeletion",
		3:  "HaltedOnRootTypeChange",
		4:  "ConnectingAlpha",
		5:  "ConnectingBeta",
		6:  "Watching",
		7:  "Scanning",
		8:  "WaitingForRescan",
		9:  "Reconciling",
		10: "StagingAlpha",
		11: "StagingBeta",
		12: "Transitioning",
		13: "Saving",
	}
	Status_value = map[string]int32{
		"Disconnected":           0,
		"HaltedOnRootEmptied":    1,
		"HaltedOnRootDeletion":   2,
		"HaltedOnRootTypeChange": 3,
		"ConnectingAlpha":        4,
		"ConnectingBeta":         5,
		"Watching":               6,
		"Scanning":               7,
		"WaitingForRescan":       8,
		"Reconciling":            9,
		"StagingAlpha":           10,
		"StagingBeta":            11,
		"Transitioning":          12,
		"Saving":                 13,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_synchronization_state_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_synchronization_state_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_synchronization_state_proto_rawDescGZIP(), []int{0}
}

// EndpointState encodes the current state of a synchronization endpoint. It is
// mutable within the context of the daemon, so it should be accessed and
// modified in a synchronized fashion. Outside of the daemon (e.g. when returned
// via the API), it should be considered immutable.
type EndpointState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Connected indicates whether or not the controller is currently connected
	// to the endpoint.
	Connected bool `protobuf:"varint,1,opt,name=connected,proto3" json:"connected,omitempty"`
	// Scanned indicates whether or not at least one scan has been performed on
	// the endpoint.
	Scanned bool `protobuf:"varint,2,opt,name=scanned,proto3" json:"scanned,omitempty"`
	// Directories is the number of synchronizable directory entries contained
	// in the last snapshot from the endpoint.
	Directories uint64 `protobuf:"varint,3,opt,name=directories,proto3" json:"directories,omitempty"`
	// Files is the number of synchronizable file entries contained in the last
	// snapshot from the endpoint.
	Files uint64 `protobuf:"varint,4,opt,name=files,proto3" json:"files,omitempty"`
	// SymbolicLinks is the number of synchronizable symbolic link entries
	// contained in the last snapshot from the endpoint.
	SymbolicLinks uint64 `protobuf:"varint,5,opt,name=symbolicLinks,proto3" json:"symbolicLinks,omitempty"`
	// TotalFileSize is the total size of all synchronizable files referenced by
	// the last snapshot from the endpoint.
	TotalFileSize uint64 `protobuf:"varint,6,opt,name=totalFileSize,proto3" json:"totalFileSize,omitempty"`
	// ScanProblems is the list of non-terminal problems encountered during the
	// last scanning operation on the endpoint. This list may be a truncated
	// version of the full list if too many problems are encountered to report
	// via the API, in which case ExcludedScanProblems will be non-zero.
	ScanProblems []*core.Problem `protobuf:"bytes,7,rep,name=scanProblems,proto3" json:"scanProblems,omitempty"`
	// ExcludedScanProblems is the number of problems that have been excluded
	// from ScanProblems due to truncation. This value can be non-zero only if
	// ScanProblems is non-empty.
	ExcludedScanProblems uint64 `protobuf:"varint,8,opt,name=excludedScanProblems,proto3" json:"excludedScanProblems,omitempty"`
	// TransitionProblems is the list of non-terminal problems encountered
	// during the last transition operation on the endpoint. This list may be a
	// truncated version of the full list if too many problems are encountered
	// to report via the API, in which case ExcludedTransitionProblems will be
	// non-zero.
	TransitionProblems []*core.Problem `protobuf:"bytes,9,rep,name=transitionProblems,proto3" json:"transitionProblems,omitempty"`
	// ExcludedTransitionProblems is the number of problems that have been
	// excluded from TransitionProblems due to truncation. This value can be
	// non-zero only if TransitionProblems is non-empty.
	ExcludedTransitionProblems uint64 `protobuf:"varint,10,opt,name=excludedTransitionProblems,proto3" json:"excludedTransitionProblems,omitempty"`
	// StagingProgress is the rsync staging progress. It is non-nil if and only
	// if the endpoint is currently staging files.
	StagingProgress *rsync.ReceiverState `protobuf:"bytes,11,opt,name=stagingProgress,proto3" json:"stagingProgress,omitempty"`
}

func (x *EndpointState) Reset() {
	*x = EndpointState{}
	mi := &file_synchronization_state_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndpointState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointState) ProtoMessage() {}

func (x *EndpointState) ProtoReflect() protoreflect.Message {
	mi := &file_synchronization_state_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointState.ProtoReflect.Descriptor instead.
func (*EndpointState) Descriptor() ([]byte, []int) {
	return file_synchronization_state_proto_rawDescGZIP(), []int{0}
}

func (x *EndpointState) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *EndpointState) GetScanned() bool {
	if x != nil {
		return x.Scanned
	}
	return false
}

func (x *EndpointState) GetDirectories() uint64 {
	if x != nil {
		return x.Directories
	}
	return 0
}

func (x *EndpointState) GetFiles() uint64 {
	if x != nil {
		return x.Files
	}
	return 0
}

func (x *EndpointState) GetSymbolicLinks() uint64 {
	if x != nil {
		return x.SymbolicLinks
	}
	return 0
}

func (x *EndpointState) GetTotalFileSize() uint64 {
	if x != nil {
		return x.TotalFileSize
	}
	return 0
}

func (x *EndpointState) GetScanProblems() []*core.Problem {
	if x != nil {
		return x.ScanProblems
	}
	return nil
}

func (x *EndpointState) GetExcludedScanProblems() uint64 {
	if x != nil {
		return x.ExcludedScanProblems
	}
	return 0
}

func (x *EndpointState) GetTransitionProblems() []*core.Problem {
	if x != nil {
		return x.TransitionProblems
	}
	return nil
}

func (x *EndpointState) GetExcludedTransitionProblems() uint64 {
	if x != nil {
		return x.ExcludedTransitionProblems
	}
	return 0
}

func (x *EndpointState) GetStagingProgress() *rsync.ReceiverState {
	if x != nil {
		return x.StagingProgress
	}
	return nil
}

// State encodes the current state of a synchronization session. It is mutable
// within the context of the daemon, so it should be accessed and modified in a
// synchronized fashion. Outside of the daemon (e.g. when returned via the API),
// it should be considered immutable.
type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Session is the session metadata. If the session is paused, then the
	// remainder of the fields in this structure should be ignored.
	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	// Status is the session status.
	Status Status `protobuf:"varint,2,opt,name=status,proto3,enum=synchronization.Status" json:"status,omitempty"`
	// LastError is the last error to occur during synchronization. It is
	// cleared after a successful synchronization cycle.
	LastError string `protobuf:"bytes,3,opt,name=lastError,proto3" json:"lastError,omitempty"`
	// SuccessfulCycles is the number of successful synchronization cycles to
	// occur since successfully connecting to the endpoints.
	SuccessfulCycles uint64 `protobuf:"varint,4,opt,name=successfulCycles,proto3" json:"successfulCycles,omitempty"`
	// Conflicts are the content conflicts identified during reconciliation.
	// This list may be a truncated version of the full list if too many
	// conflicts are encountered to report via the API, in which case
	// ExcludedConflicts will be non-zero.
	Conflicts []*core.Conflict `protobuf:"bytes,5,rep,name=conflicts,proto3" json:"conflicts,omitempty"`
	// ExcludedConflicts is the number of conflicts that have been excluded from
	// Conflicts due to truncation. This value can be non-zero only if conflicts
	// is non-empty.
	ExcludedConflicts uint64 `protobuf:"varint,6,opt,name=excludedConflicts,proto3" json:"excludedConflicts,omitempty"`
	// AlphaState encodes the state of the alpha endpoint. It is always non-nil.
	AlphaState *EndpointState `protobuf:"bytes,7,opt,name=alphaState,proto3" json:"alphaState,omitempty"`
	// BetaState encodes the state of the beta endpoint. It is always non-nil.
	BetaState *EndpointState `protobuf:"bytes,8,opt,name=betaState,proto3" json:"betaState,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	mi := &file_synchronization_state_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_synchronization_state_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_synchronization_state_proto_rawDescGZIP(), []int{1}
}

func (x *State) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *State) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Disconnected
}

func (x *State) GetLastError() string {
	if x != nil {
		return x.LastError
	}
	return ""
}

func (x *State) GetSuccessfulCycles() uint64 {
	if x != nil {
		return x.SuccessfulCycles
	}
	return 0
}

func (x *State) GetConflicts() []*core.Conflict {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

func (x *State) GetExcludedConflicts() uint64 {
	if x != nil {
		return x.ExcludedConflicts
	}
	return 0
}

func (x *State) GetAlphaState() *EndpointState {
	if x != nil {
		return x.AlphaState
	}
	return nil
}

func (x *State) GetBetaState() *EndpointState {
	if x != nil {
		return x.BetaState
	}
	return nil
}

var File_synchronization_state_proto protoreflect.FileDescriptor

var file_synchronization_state_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x73,
	0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x23,
	0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x72, 0x73, 0x79, 0x6e, 0x63, 0x2f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x23, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x03, 0x0a, 0x0d,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x69, 0x63, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x73, 0x63, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x0c,
	0x73, 0x63, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x12, 0x32, 0x0a, 0x14,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73,
	0x12, 0x3d, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x12, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x12,
	0x3e, 0x0a, 0x1a, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x1a, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x12,
	0x3e, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x73, 0x79, 0x6e, 0x63,
	0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f,
	0x73, 0x74, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x90, 0x03, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x79, 0x6e,
	0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x10,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66,
	0x75, 0x6c, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66,
	0x6c, 0x69, 0x63, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x11, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x6c,
	0x69, 0x63, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x68,
	0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x62, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72,
	0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x62, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x2a, 0x97, 0x02, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a,
	0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x00, 0x12,
	0x17, 0x0a, 0x13, 0x48, 0x61, 0x6c, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x45,
	0x6d, 0x70, 0x74, 0x69, 0x65, 0x64, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x48, 0x61, 0x6c, 0x74,
	0x65, 0x64, 0x4f, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x48, 0x61, 0x6c, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x52, 0x6f,
	0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x03, 0x12, 0x13,
	0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x70, 0x68,
	0x61, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6e,
	0x67, 0x42, 0x65, 0x74, 0x61, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x63, 0x61, 0x6e, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x65, 0x63,
	0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x74,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b,
	0x53, 0x74, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x42, 0x65, 0x74, 0x61, 0x10, 0x0b, 0x12, 0x11, 0x0a,
	0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x0c,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x10, 0x0d, 0x42, 0x33, 0x5a, 0x31,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x75, 0x74, 0x61, 0x67,
	0x65, 0x6e, 0x2d, 0x69, 0x6f, 0x2f, 0x6d, 0x75, 0x74, 0x61, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_synchronization_state_proto_rawDescOnce sync.Once
	file_synchronization_state_proto_rawDescData = file_synchronization_state_proto_rawDesc
)

func file_synchronization_state_proto_rawDescGZIP() []byte {
	file_synchronization_state_proto_rawDescOnce.Do(func() {
		file_synchronization_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_synchronization_state_proto_rawDescData)
	})
	return file_synchronization_state_proto_rawDescData
}

var file_synchronization_state_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_synchronization_state_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_synchronization_state_proto_goTypes = []any{
	(Status)(0),                 // 0: synchronization.Status
	(*EndpointState)(nil),       // 1: synchronization.EndpointState
	(*State)(nil),               // 2: synchronization.State
	(*core.Problem)(nil),        // 3: core.Problem
	(*rsync.ReceiverState)(nil), // 4: rsync.ReceiverState
	(*Session)(nil),             // 5: synchronization.Session
	(*core.Conflict)(nil),       // 6: core.Conflict
}
var file_synchronization_state_proto_depIdxs = []int32{
	3, // 0: synchronization.EndpointState.scanProblems:type_name -> core.Problem
	3, // 1: synchronization.EndpointState.transitionProblems:type_name -> core.Problem
	4, // 2: synchronization.EndpointState.stagingProgress:type_name -> rsync.ReceiverState
	5, // 3: synchronization.State.session:type_name -> synchronization.Session
	0, // 4: synchronization.State.status:type_name -> synchronization.Status
	6, // 5: synchronization.State.conflicts:type_name -> core.Conflict
	1, // 6: synchronization.State.alphaState:type_name -> synchronization.EndpointState
	1, // 7: synchronization.State.betaState:type_name -> synchronization.EndpointState
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_synchronization_state_proto_init() }
func file_synchronization_state_proto_init() {
	if File_synchronization_state_proto != nil {
		return
	}
	file_synchronization_session_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_synchronization_state_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_synchronization_state_proto_goTypes,
		DependencyIndexes: file_synchronization_state_proto_depIdxs,
		EnumInfos:         file_synchronization_state_proto_enumTypes,
		MessageInfos:      file_synchronization_state_proto_msgTypes,
	}.Build()
	File_synchronization_state_proto = out.File
	file_synchronization_state_proto_rawDesc = nil
	file_synchronization_state_proto_goTypes = nil
	file_synchronization_state_proto_depIdxs = nil
}
